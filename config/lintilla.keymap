#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Multiple mods

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        NumLayer {
            bindings = <&mo 2>;
            key-positions = <40 41>;
        };

        NavLayer {
            bindings = <&mo 1>;
            key-positions = <37 36>;
        };

        EditLayer {
            bindings = <&sl 3>;
            key-positions = <9 10>;
        };

        MouseLayer {
            bindings = <&to 4>;
            key-positions = <32 33>;
        };

        yuyou {
            bindings = <&you>;
            key-positions = <12 11>;
        };

        bt0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <3 4>;
        };

        bt1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <15 16>;
        };

        bt2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <26 27>;
        };

        btclr {
            bindings = <&bt BT_CLR>;
            key-positions = <14 3>;
        };
    };

    macros {
        InstPaste: InstPaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(V)>;
            label = "INSTPASTE";
        };

        CMD: CMD {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(R) &kp C &kp M &kp D &kp ENTER>;
            label = "CMD";
        };

        you: you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O &kp U>;
            label = "YOU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
                    &mt ESC TAB                                                                                                                                                                  &mt LG(LC(T)) LS(LG(S))
&mt LCTRL LEFT_WIN  &mt LS(Q) Q  &mt LS(W) W  &mt LS(F) F      &mt LS(P) P         &mt LS(B) B  &mt QUESTION SLASH                      &mt LS(J) J  &mt LS(L) L           &mt LS(U) U           &mt LS(Y) Y              &kp C_VOLUME_UP
&kp LEFT_SHIFT      &mt LS(A) A  &mt LS(R) R  &mt LS(S) S      &mt LS(T) T         &mt LS(G) G  &mt DOUBLE_QUOTES SQT                   &mt LS(M) M  &mt LS(N) N           &mt LS(E) E           &mt LS(I) I              &mt K_MUTE C_VOL_DN
                    &mt LS(Z) Z  &mt LS(X) X  &mt LS(C) C      &mt LS(D) D         &mt LS(V) V  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt LS(K) K  &mt LS(H) H           &mt UNDERSCORE MINUS  &mt LS(O) O
                                              &mt COLON COMMA  &mt LEFT_ALT SPACE  &kp RET      &kp BSPC                                &kp SPACE    &mt SEMICOLON PERIOD
            >;
        };

        layer_3 {
            bindings = <
         &none                                                                                                             &none
&none    &none             &none              &kp LC(LS(T))    &kp LC(W)    &none  &none  &kp TAB   &kp LS(TAB)  &none     &none      &none
&kp ESC  &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp LS(LC(TAB))  &kp LC(TAB)  &none  &none  &kp LEFT  &kp UP       &kp DOWN  &kp RIGHT  &none
         &none             &none              &none            &none        &none  &none  &none     &none        &none     &none
                                              &none            &none        &none  &none  &none     &none
            >;
        };

        layer_4 {
            bindings = <
                           &none                                                                                                                                                                                                    &none
&mt TILDE GRAVE            &none                     &none                 &none               &none                &none           &mt PIPE BACKSLASH              &mt PLUS EQUAL        &none            &none                    &none                     &none
&mt PIPE NON_US_BACKSLASH  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3   &mt DOLLAR NUMBER_4  &mt PERCENT N5  &mt RIGHT_BRACE LEFT_BRACE      &mt AMPERSAND N7      &mt ASTERISK N8  &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp PERIOD
                           &none                     &none                 &none               &none                &none           &mt RIGHT_BRACKET LEFT_BRACKET  &mt UNDERSCORE MINUS  &none            &none                    &none
                                                                           &mt CARET NUMBER_6  &none                &none           &none                           &none                 &none
            >;
        };

        layer_5 {
            bindings = <
       &kp K_POWER                                                                                              &kp K_SLEEP
&none  &none           &none      &none          &none      &none  &none       &kp LG(R)  &CMD       &none      &none        &none
&none  &kp LA(LS(N5))  &kp LC(I)  &kp LC(U)      &kp LC(B)  &none  &none       &kp LC(Z)  &kp LC(Y)  &kp LC(F)  &kp LC(A)    &none
       &none           &none      &kp LC(LS(V))  &kp LC(V)  &none  &InstPaste  &kp LC(C)  &kp LC(X)  &none      &none
                                  &none          &none      &none  &none       &none      &none
            >;
        };

        layer_6 {
            bindings = <
         &none                                                                                                                              &none
&none    &none             &none              &kp LC(LS(W))    &kp LC(W)     &none  &none     &to 0           &kp UP        &kp DOWN        &none            &none
&kp ESC  &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp LS(LC(TAB))  &kp LC(TAB)   &none  &none     &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
         &none             &none              &kp TAB          &none         &none  &none     &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT
                                              &none            &kp LEFT_ALT  &none  &mkp MB3  &mkp MB2        &mkp MB1
            >;
        };

        bluetooth {
            bindings = <
                &trans                                                                                                &trans
&bt BT_CLR      &trans        &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};

// vim: expandtab softtabstop=4 shiftwidth=4 filetype=dts
